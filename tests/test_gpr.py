# -*- coding: utf-8 -*-
"""
Created on Mon Oct 17 11:29:24 2016

@author: andmar
"""
import sys
import numpy as np
from matplotlib import pyplot as plt

# load as a module
sys.path.append('/home/mrstats/andmar/sfw/PCNtoolkit/pcntoolkit')
from gp import GPR, CovSqExp, CovSqExpARD, CovLin

# load from the installed package
#from pcntoolkit.gp import GPR, covSqExp

X = np.asarray([2.08397042775073,
-0.821018066101379,
-0.617870699182597,
-1.18382260886069,
0.274087442277144,
0.599441729295593,
1.76889791920444,
-0.465645549031928,
0.588852784375935,
-0.832982214438054,
-0.512106527960363,
0.277883144210116,
-0.0658704269222113,
-0.821412363806325,
0.185399443778088,
-0.858296174995998,
0.370786630037059,
-1.40986916241664,
-0.144668412325022,
-0.553299615220374])

y = np.asarray([4.54920374633170,
0.371985574437271,
0.711307965514790,
-0.0132128936184299,
2.25547325533819,
1.00991574929573,
3.74467593796503,
0.424592771793202,
1.32283365229581,
0.278298293510020,
0.267229130945574,
2.20011228672383,
1.20060998330897,
0.439971697236094,
2.62858043351126,
0.503774817336353,
1.94252531382056,
0.579133950013327,
0.670874423968554,
0.377353755100965])

#y = y-np.mean(y)

Xs = np.asarray([-1.90000000000000,
-1.86200000000000,
-1.82400000000000,
-1.78600000000000,
-1.74800000000000,
-1.71000000000000,
-1.67200000000000,
-1.63400000000000,
-1.59600000000000,
-1.55800000000000,
-1.52000000000000,
-1.48200000000000,
-1.44400000000000,
-1.40600000000000,
-1.36800000000000,
-1.33000000000000,
-1.29200000000000,
-1.25400000000000,
-1.21600000000000,
-1.17800000000000,
-1.14000000000000,
-1.10200000000000,
-1.06400000000000,
-1.02600000000000,
-0.988000000000000,
-0.950000000000000,
-0.912000000000000,
-0.874000000000000,
-0.836000000000000,
-0.798000000000000,
-0.760000000000000,
-0.722000000000000,
-0.684000000000000,
-0.646000000000000,
-0.608000000000000,
-0.570000000000000,
-0.532000000000000,
-0.494000000000000,
-0.456000000000000,
-0.418000000000000,
-0.380000000000000,
-0.342000000000000,
-0.304000000000000,
-0.266000000000000,
-0.228000000000000,
-0.190000000000000,
-0.152000000000000,
-0.114000000000000,
-0.0760000000000001,
-0.0380000000000000,
0,
0.0379999999999998,
0.0760000000000001,
0.114000000000000,
0.152000000000000,
0.190000000000000,
0.228000000000000,
0.266000000000000,
0.304000000000000,
0.342000000000000,
0.380000000000000,
0.418000000000000,
0.456000000000000,
0.494000000000000,
0.532000000000000,
0.570000000000000,
0.608000000000000,
0.646000000000000,
0.684000000000000,
0.722000000000000,
0.760000000000000,
0.798000000000000,
0.836000000000000,
0.874000000000000,
0.912000000000000,
0.950000000000000,
0.988000000000000,
1.02600000000000,
1.06400000000000,
1.10200000000000,
1.14000000000000,
1.17800000000000,
1.21600000000000,
1.25400000000000,
1.29200000000000,
1.33000000000000,
1.36800000000000,
1.40600000000000,
1.44400000000000,
1.48200000000000,
1.52000000000000,
1.55800000000000,
1.59600000000000,
1.63400000000000,
1.67200000000000,
1.71000000000000,
1.74800000000000,
1.78600000000000,
1.82400000000000,
1.86200000000000,
1.90000000000000])

N = len(X)

X = np.c_[X, np.ones(N), np.arange(1,N+1)]

cov = CovSqExp(X)
hyp0 = np.zeros(3)

cov = CovSqExpARD(X)
hyp0 = np.zeros(X.shape[1]+2)

#cov = covLin
#hyp0 = np.asarray((0, None))

G = GPR(hyp0, cov, X, y)
G.loglik(hyp0, cov, X, y)
G.dloglik(hyp0, cov, X, y)
hyp = G.estimate(hyp0,cov, X, y)
yhat,s2 = G.predict(hyp0,X,y,X)
